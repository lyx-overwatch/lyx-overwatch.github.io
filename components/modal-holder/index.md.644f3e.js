(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{879:function(n,a){n.exports={content:["section"],meta:{title:"ModalHolder",filename:"components/modal-holder/index.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]]],api:["section",["h2","API"],["h3","构造 ModalHolder， 打开 modal"],["p","使用 ModalHolder 构造函数创建实例, 参数是我们需要展示的 modal 组件；"],["p","调用 open 方法展开 modal；"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">const</span> modalHolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModalHolder</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CurrentModal</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CurrentModal</span><span class="token punctuation">></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmodalHolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","const modalHolder = new ModalHolder(<CurrentModal></CurrentModal>);\nmodalHolder.open();"]],["h3","关闭 modal"],["p","需要展示的 CurrentModal 组件 通过 ModalHolder 的包装，对 visible, onOk, onCancel 属性进行了托管；"],["p","visible 和 onOk, onCancel 等属性传入了该组件的 props；"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"antd"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CurrentModal <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> visible<span class="token punctuation">,</span> onOk<span class="token punctuation">,</span> onCancel <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Modal</span>\n      <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>visible<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onOk</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onOk<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onCancel<span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Modal</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code",'import { Modal } from "antd";\n\nconst CurrentModal = (props) => {\n  const { visible, onOk, onCancel } = props;\n\n  return (\n    <Modal\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n    ></Modal>\n  );\n};']]]}}}]);